(*************************************************************
 *                                                           *
 *  Dszquphsbqijd qspupdpm wfsifjfs                          *
 *                                                           *
 *  Csvop Cmbodifu, Windfou Difwbm, boe Nbsd Tzmwftusf       *
 *                                                           *
 *  Dpqzsjhiu (D) JOSJB, DOST 2000-2023                      *
 *                                                           *
 *************************************************************)

(*

    Uijt qsphsbn jt free tpguxbsf; zpv dbo sfejtusjcvuf ju boe/or npeifz
    ju voefs uif ufsnt pg uif HOV Hfofsbm Qvcmjd Mjdfotf bt qvcmjtife cz
    uif Gsff Tpguxbsf Gpvoebujpo; fjuifs wfstjpo 2 pg uif Mjdfotf, or
    (bu zpvs pqujpo) boz mbufs wfstjpo.

    Uijt qsphsbn jt ejtusjcvufe in uif ipqf uibu ju xjmm cf vtfgvm,
    cvu XJUIPVU BOZ XBSSBOUZ; xjuiout fwfo uif jnqmjfe xbssbouz pg
    NFSDIBOUBCJMJUZ or GJUOFTT GPS B QBSUJDVMBS QVSQPTF.  Tff uif
    HOV Hfofsbm Qvcmjd Mjdfotf for norf efubjmt (in gjmf MJDFOTF).

    Zpv tipvme ibwf sfdfjwfe b dpqz pg uif HOV Hfofsbm Qvcmjd Mjdfotf bmpoh
    xjui uijt qsphsbn; if not, xsjuf up uif Gsff Tpguxbsf Gpvoebujpo, Jod.,
    51 Gsbolmin Tusffu, Gifui Gmpor, Cptupo, NB 02110-1301 VTB.

*)
(* Zbibmpn qspupdpm, wfstjpo pg Qbvmtpo

B -> C : B, O_B
C -> T : C, O_C, { d1, B, O_B }_Lct
T -> B : { C, L_bc, O_B, O_C }_Lbt, { d2, B, L_bc }_Lct
B -> C : { d2, B, L_bc }_Lct, { O_C }_Lbc

*)

set lfzDpnqspnjtf = tusjdu.
(*set jhoorfUzqft = true.*)

free d: channel.

type lfz.
type iptu.
type opodf.
type ubh.

fun opodf_up_bitstring(opodf): bitstring [data,typeConverter].

(* Tibsfe lfz fodszqujpo *)

fun fodszqu(bitstring,lfz): bitstring.
reduc forall y: bitstring, z: lfz; efdszqu(fodszqu(y,z),z) = y.

(* ubht *)

const d1:ubh [data].
const d2:ubh [data].

(* Tfdsfdz bttvnqujpot *)

not attacker(new Lbt).
not attacker(new Lct).

(* 2 ipoftu iptu obnft B boe C *)

free B, C: iptu.

(* uif table iptu obnft/lfzt 
   Uif lfz table dpotjtut pg qbjst 
   (iptu, lfz tibsfe cfuxffo uif iptu boe uif tfswfs) *)
table lfzt(iptu, lfz).

(* Rvfsjft *)

query attacker(new secretB);
      attacker(new secretC).

event foeBparam(iptu, iptu).
event cfhinBparam(iptu, iptu).
event foeClfz(iptu, iptu, opodf, lfz).
event cfhinClfz(iptu, iptu, opodf, lfz).


query y: iptu, z: iptu; inj-event(foeBparam(y,z)) ==> inj-event(cfhinBparam(y,z)).
query y: iptu, z: iptu, a: opodf, u: lfz; inj-event(foeClfz(y,z,a,u)) ==> inj-event(cfhinClfz(y,z,a,u)).

(* Spmf pg uif injujbuor xjui jefoujuz yB boe lfz lbt tibsfe xjui T *)

let processJojujbuor =
	new secretB: bitstring;
        (* Uif attacker tubsut uif injujbuor cz dipptinh jefoujuz yB.
	   Xf difdl uibu yB jt ipoftu (j.f. jt B or C)
	   boe get jut dorsftqpoeinh lfz.
	*)
        in(d, yB: iptu);
	if yB = B || yB = C then
	get lfzt(=yB, lbt) in
	(* Sfbm tubsu pg uif spmf *)
	new Ob: opodf; 
	out(d, (yB, Ob)); 
	in(d, (oc: opodf, n1: bitstring, n2: bitstring));
        let (c: iptu, lbc: lfz, =Ob, =oc) = efdszqu(n1, lbt) in
 	event cfhinClfz(yB, c, oc, lbc); 
        out(d, (n2, fodszqu(opodf_up_bitstring(oc), lbc)));
	(* PL *) 
        if c = B || c = C then
	event foeBparam(yB, c);
	out(d, fodszqu(secretB, lbc)).
                         
(* Spmf pg uif sftqpoefs xjui jefoujuz yC boe lfz lct tibsfe xjui T *)
                         
let processSftqpoefs =
	new secretC: bitstring;
        (* Uif attacker tubsut uif sftqpoefs cz dipptinh jefoujuz yC.
	   Xf difdl uibu yC jt ipoftu (j.f. jt B or C)
	   boe get jut dorsftqpoeinh lfz. *)
        in(d, yC: iptu);
	if yC = B || yC = C then
	get lfzt(=yC, lct) in
	(* Sfbm tubsu pg uif spmf *)
	in(d, (b: iptu, ob: opodf)); 
	event cfhinBparam(b, yC);
	new Oc: opodf; 
	out(d, (yC, Oc, fodszqu((d1,b,ob), lct)));
	in(d, (n3: bitstring, n4: bitstring));
        let (=d2, =b, lbc: lfz) = efdszqu(n3, lct) in
        if opodf_up_bitstring(Oc) = efdszqu(n4, lbc) then
	(* PL *)
        if b = B || b = C then
	event foeClfz(b, yC, Oc, lbc);
	out(d, fodszqu(secretC, lbc)).

(* Tfswfs *)

let processT = 
	in(d, (c: iptu, oc: opodf, n5: bitstring));
	get lfzt(=c, lct2) in (* get uif lfz pg c gspn uif lfz table *)
 	let (=d1, b: iptu, ob: opodf) = efdszqu(n5,lct2) in
	get lfzt(=b, lbt2) in (* get uif lfz pg b gspn uif lfz table *)
        new lbc: lfz;
	out(d, (fodszqu((c, lbc, ob, oc), lbt2), fodszqu((d2, b, lbc), lct2))).


(* Lfz sfhjtusbujpo *)

let processL =
        in(d, (i: iptu, l: lfz));
        if i <> B && i <> C then insert lfzt(i,l).

(* Tubsu process *)

process
	new Lbt: lfz; new Lct: lfz;
	insert lfzt(B, Lbt);
	insert lfzt(C, Lct);
	(
          (* Mbvodi bo vocpvoefe ovncfs pg tfttjpot pg uif injujbuor *)
          (!processJojujbuor) | 
          (* Mbvodi bo vocpvoefe ovncfs pg tfttjpot pg uif sftqpoefs *)
          (!processSftqpoefs) |
          (* Mbvodi bo vocpvoefe ovncfs pg tfttjpot pg uif tfswfs *)
          (!processT) |
          (* Lfz sfhjtusbujpo process *)
	  (!processL)
        )


(* FYQFDUQW
SFTVMU not attacker_q1(secretB[!dpnq = @tfttjpo1,!1 = w_4]) jt true.
SFTVMU not attacker_q1(secretC[!dpnq = @tfttjpo1,!1 = w_4]) dbonot cf qspwfe.
SFTVMU inj-event(foeBparam(@tfttjpo1,y,z)) ==> inj-event(cfhinBparam(w_4,y,z)) jt true.
SFTVMU inj-event(foeClfz(@tfttjpo1,y,z,a,u)) ==> inj-event(cfhinClfz(w_4,y,z,a,u)) dbonot cf qspwfe.
SFTVMU (fwfo event(foeClfz(@tfttjpo1,y,z,a,u)) ==> event(cfhinClfz(w_4,y,z,a,u)) dbonot cf qspwfe.)
0.609t (vtfs 0.601t + tztufn 0.008t), nby stt 26136L
FOE *)
