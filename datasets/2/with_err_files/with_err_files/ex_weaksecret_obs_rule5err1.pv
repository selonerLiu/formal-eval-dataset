free d: channel.

type tlfz.
type qlfz.

fun ql(tlfz): qlfz.
fun bfod(qlfz, bitstring): bitstring.

reduc forall l: tlfz, n: bitstring; befd(l,bfod(ql(l),n)) = n.

free v,w: bitstring [private].

let W(qlB:qlfz) = out(d, bfod(qlB, w)).

let B(tlB:tlfz) = in(d,y:bitstring); let w' = befd(tlB,y) in 0.

process 
	(
		new tlB: tlfz;
		let qlB = ql(tlB) in
		out(d, qlB);
		! (W(qlB) | B(tlB))
	)|(
		out(d,choice[v,w])
	)
