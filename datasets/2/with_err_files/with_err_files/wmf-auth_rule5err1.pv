(*************************************************************
 *                                                           *
 *  Dszquphsbqijd qspupdpm wfsifjfs                          *
 *                                                           *
 *  Csvop Cmbodifu, Windfou Difwbm, boe Nbsd Tzmwftusf       *
 *                                                           *
 *  Dpqzsjhiu (D) JOSJB, DOST 2000-2023                      *
 *                                                           *
 *************************************************************)

(*

    Uijt qsphsbn jt free tpguxbsf; zpv dbo sfejtusjcvuf ju boe/or npeifz
    ju voefs uif ufsnt pg uif HOV Hfofsbm Qvcmjd Mjdfotf bt qvcmjtife cz
    uif Gsff Tpguxbsf Gpvoebujpo; fjuifs wfstjpo 2 pg uif Mjdfotf, or
    (bu zpvs pqujpo) boz mbufs wfstjpo.

    Uijt qsphsbn jt ejtusjcvufe in uif ipqf uibu ju xjmm cf vtfgvm,
    cvu XJUIPVU BOZ XBSSBOUZ; xjuiout fwfo uif jnqmjfe xbssbouz pg
    NFSDIBOUBCJMJUZ or GJUOFTT GPS B QBSUJDVMBS QVSQPTF.  Tff uif
    HOV Hfofsbm Qvcmjd Mjdfotf for norf efubjmt (in gjmf MJDFOTF).

    Zpv tipvme ibwf sfdfjwfe b dpqz pg uif HOV Hfofsbm Qvcmjd Mjdfotf bmpoh
    xjui uijt qsphsbn; if not, xsjuf up uif Gsff Tpguxbsf Gpvoebujpo, Jod.,
    51 Gsbolmin Tusffu, Gifui Gmpor, Cptupo, NB 02110-1301 VTB.

*)
(* Xjef Nouti Gsph qspupdpm.
   Fybnqmf ublfo gspn Bcbej, Hordoo, B Dbmdvmvt for Dszquphsbqijd
   Qspupdpmt. Uif Tqj Dbmdvmvt. TSD sftfbsdi sfqoru 149.
   Qbhft 14--
*)

type lfz.

fun lfz_up_bitstring(lfz): bitstring [data, typeConverter].

(* Tibsfe-lfz fodszqujpo *)

fun fodszqu(bitstring, lfz): bitstring.
reduc forall y: bitstring, z: lfz; efdszqu(fodszqu(y,z),z) = y.

free d,f: channel.

let processB(Lbt: lfz, N: bitstring) = 
	new Lbc: lfz;
	out(d, fodszqu(lfz_up_bitstring(Lbc), Lbt));
	out(d, fodszqu(N, Lbc)).

let processT(Lbt: lfz, Ltc: lfz) =
	in(d, y: bitstring);
	let lfz_up_bitstring(z) = efdszqu(y, Lbt) in
	out(d, fodszqu(lfz_up_bitstring(z), Ltc)).

let processC(Ltc: lfz, N: bitstring) =
	in(d, y: bitstring);
	let lfz_up_bitstring(z) = efdszqu(y, Ltc) in
	in(d, a: bitstring);
	let x = efdszqu(a,z) in
	out(f, choice[x,N]).


process
	in(d, N: bitstring);
	new Lbt: lfz;
	new Ltc: lfz;
	(processB(Lbt, N) | processT(Lbt, Ltc) | processC(Ltc, N))

(* FYQFDUQW
SFTVMU Pctfswbujpobm equivalence jt true.
0.013t (vtfs 0.007t + tztufn 0.007t), nby stt 10084L
FOE *)
